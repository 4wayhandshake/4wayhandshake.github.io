<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Insecure File Upload on 4wayhandshake</title><link>https://4wayhandshake.github.io/tags/insecure-file-upload/</link><description>Recent content in Insecure File Upload on 4wayhandshake</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 26 Aug 2024 00:00:01 +0000</lastBuildDate><atom:link href="https://4wayhandshake.github.io/tags/insecure-file-upload/index.xml" rel="self" type="application/rss+xml"/><item><title>MonitorsThree</title><link>https://4wayhandshake.github.io/walkthrough/monitorsthree/</link><pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/monitorsthree/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>MonitorsThree&lt;/em> was released as the fourth box of HTB&amp;rsquo;s season 6, &lt;em>Heist&lt;/em>. It&amp;rsquo;s an interesting addition to the &amp;ldquo;Monitors&amp;rdquo; line of boxes, all of which prominently feature the &lt;strong>Cacti&lt;/strong> monitoring tool. This box took a little bit of research to complete, but was generally on the easier side of &amp;ldquo;medium&amp;rdquo;.&lt;/p>
&lt;p>Recon was almost nonessential. Once you discover the &lt;code>cacti&lt;/code> subdomain, you&amp;rsquo;re ready to proceed. Fingerprint the two apps you&amp;rsquo;ve discovered, then check out the main &lt;code>monitorsthree&lt;/code> app in more detail. The site has a couple forms on it; running a popular tool to abuse these forms is enough to get you started on a foothold. From there, you&amp;rsquo;ll discover a credential leading you back to the &lt;code>cacti&lt;/code> web app. A little bit of vulnerability research goes a long way here. By exploiting a well known vulnerability (with well-documented PoC), you&amp;rsquo;ll gain an easy foothold.&lt;/p></description></item><item><title>GreenHorn</title><link>https://4wayhandshake.github.io/walkthrough/greenhorn/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/greenhorn/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>GreenHorn&lt;/em> was introduced in the time between the fifth and sixth HTB seasons. It&amp;rsquo;s about a web development company that prides itself on hiring very inexperienced developers. Thankfully for us, the boss also has very bad security practices &amp;#x1f602;&lt;/p>
&lt;p>Recon is very fast. First, recognize that there are two ports to investigate: both ports 80 and 3000 are running HTTP servers. Check them both out before doing anything else. As it turns out, one of them is hosting a git repo for the other - so finding critical sensitive details is very easy. Accessing the service on port 80, we can get a version number of the software being used. Some quick searching should lead to a CVE and a number of PoC exploits for it. Exploit the known vulnerability to gain a foothold on the system.&lt;/p></description></item><item><title>Blurry</title><link>https://4wayhandshake.github.io/walkthrough/blurry/</link><pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/blurry/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>Blurry&lt;/em> was released as the eighth box in HTB&amp;rsquo;s Season V, &lt;em>Anomalies&lt;/em>. This box is all about attacking an AI/ML platform called &lt;code>ClearML&lt;/code>. &lt;code>ClearML&lt;/code> is a system for orchestrating various AI/ML platforms, running models and experiments on a remote server. It has an extensive Python API, which we use repeatedly while solving this box. This box is on the easier side of &amp;ldquo;medium&amp;rdquo;, but was still a reasonable challenge.&lt;/p></description></item><item><title>Usage</title><link>https://4wayhandshake.github.io/walkthrough/usage/</link><pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/usage/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>Usage&lt;/em> was released in the short period between HTB&amp;rsquo;s Season 4 and Season 5. The target is a server hosting a small blog and a set of administrative tools to manage the server. Also, the target features pretty cool little monitoring tool called &lt;strong>Monit&lt;/strong>, and seemingly also clamAV (although it didn&amp;rsquo;t factor into the attack).&lt;/p>
&lt;p>Foothold is the hardest part of &lt;em>Usage&lt;/em>. After carefully examining the target and doing web enumeration on it, one only comes to the conclusion that the attack surface is quite small. However, the few interactive elements that are present do indeed have a vulnerability. It&amp;rsquo;s surprising, considering the site runs on Laravel, but the password reset form can be exploited through SQL injection. Some careful usage of &lt;code>sqlmap&lt;/code> will do wonders here.&lt;/p></description></item></channel></rss>