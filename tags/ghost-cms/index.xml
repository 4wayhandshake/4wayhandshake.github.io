<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ghost CMS on 4wayhandshake</title>
    <link>http://4wayhandshake.local:1313/tags/ghost-cms/</link>
    <description>Recent content in Ghost CMS on 4wayhandshake</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 17 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://4wayhandshake.local:1313/tags/ghost-cms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LinkVortex</title>
      <link>http://4wayhandshake.local:1313/walkthrough/linkvortex/</link>
      <pubDate>Wed, 17 Jan 2029 00:00:00 +0000</pubDate>
      <guid>http://4wayhandshake.local:1313/walkthrough/linkvortex/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;INTRODUCTION&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;LinkVortex&lt;/em&gt; was all about the recon steps. A little bit of OSINT with a portion of web fuzzing is all that it takes. First though, we must discover the technology that the target website runs on, do a little reading on how it works, and make some educated guesses about directory structure: only then will we find the dashboard login. On the dashboard login, we discover a username oracle. Finally, after finding a vulnerable subdomain, we are able to do some &lt;code&gt;.git&lt;/code&gt; reconstruction to obtain some hardcoded credentials in the source code. Combining all of those clues together, we can finally gain access to the dashboard.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
