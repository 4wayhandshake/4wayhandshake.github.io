<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Decompilation on 4wayhandshake</title><link>https://4wayhandshake.github.io/tags/decompilation/</link><description>Recent content in Decompilation on 4wayhandshake</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Thu, 16 Jan 2025 12:49:00 +0000</lastBuildDate><atom:link href="https://4wayhandshake.github.io/tags/decompilation/index.xml" rel="self" type="application/rss+xml"/><item><title>Spookifier</title><link>https://4wayhandshake.github.io/ctf/spookifier/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/ctf/spookifier/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>Spookifier&lt;/em> is an excellent introduction to a very fun class of web vulnerabilities. It makes for a nice little &amp;ldquo;coffee break&amp;rdquo; challenge. Perfect if you don&amp;rsquo;t have much time.&lt;/p>
&lt;h2 id="first-take">FIRST TAKE&lt;/h2>
&lt;p>Start by downloading the files. It&amp;rsquo;s a docker container with a Flask application inside. Read the code, and realize there&amp;rsquo;s only one endpoint inside.&lt;/p>
&lt;p>It&amp;rsquo;s a &lt;strong>Python Flask&lt;/strong> server and uses &lt;strong>Mako&lt;/strong> as a template engine.&lt;/p>
&lt;p>&lt;img src="https://4wayhandshake.github.io/ctf/spookifier/challenge%20dir.png" alt="challenge dir">&lt;/p></description></item><item><title>Spookypass</title><link>https://4wayhandshake.github.io/ctf/spookypass/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/ctf/spookypass/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>Super easy challenge. This challenge introduces a beginner at reversing into opening their tools and checking inside a file.&lt;/p>
&lt;h2 id="first-take">FIRST TAKE&lt;/h2>
&lt;p>Start by downloading the file. We can check &lt;code>file&lt;/code> to see the file type:&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>./pass: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=3008217772cc2426c643d69b80a96c715490dd91, for GNU/Linux 4.4.0, not stripped&lt;/em>&lt;/p>&lt;/blockquote>
&lt;p>Try running the executable. It presents you with a simple prompt, asking the password:&lt;/p></description></item><item><title>Crafty</title><link>https://4wayhandshake.github.io/walkthrough/crafty/</link><pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/crafty/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>Crafty&lt;/em> is an easy-rated Windows box, released for week 6 of HTB&amp;rsquo;s Season IV &lt;em>Savage Lands&lt;/em>. This box centers around exploitation of &lt;code>log4j&lt;/code> - maybe you&amp;rsquo;ve heard of it &amp;#x1f602; It was a really big deal in 2021. While the disaster that ensued caused heaps of damage, &lt;em>very little actually changed&lt;/em> as a result of its occurrence. If anything can be said for it, at least it stoked the international dialog on supply-chain attacks and &lt;em>the failing health of the open-source ecosystem&lt;/em>.&lt;/p></description></item></channel></rss>