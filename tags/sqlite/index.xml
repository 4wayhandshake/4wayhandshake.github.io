<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQLite on 4wayhandshake</title><link>https://4wayhandshake.github.io/tags/sqlite/</link><description>Recent content in SQLite on 4wayhandshake</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Thu, 30 Jan 2025 00:00:01 +0000</lastBuildDate><atom:link href="https://4wayhandshake.github.io/tags/sqlite/index.xml" rel="self" type="application/rss+xml"/><item><title>Compiled</title><link>https://4wayhandshake.github.io/walkthrough/compiled/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/compiled/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>I&amp;rsquo;d like to say I had a fun time with &lt;em>Compiled&lt;/em>, but I really didn&amp;rsquo;t. It had several good learning moments, but also a lot of really painful and time-consuming steps. It was very much a &amp;ldquo;CVE box&amp;rdquo;.&lt;/p>
&lt;p>Recon was easy. The initial nmap scans tell us almost everything we need to know. Two HTTP services are found right away, and the default script scan shows the presence of a subdomain. Avoid the pitfall here of investigating one of the services too deeply without checking out the other one, too. The services are highly related to each other; it will make a lot more sense after seeing both. Remember to &lt;em>write down versions of everything&lt;/em> when you see them, and don&amp;rsquo;t skip the vuln research!&lt;/p></description></item><item><title>Lantern</title><link>https://4wayhandshake.github.io/walkthrough/lantern/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/lantern/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>Is it Linux? I&amp;rsquo;m not so sure&amp;hellip; &amp;#x1f914;&lt;/p>
&lt;p>&lt;em>Lantern&lt;/em>, the third box in HTB&amp;rsquo;s Season 6 &lt;em>Heist&lt;/em>, claims to be a Linux box, but in most respects actually it&amp;rsquo;s actually running things as one might in Windows. It isn&amp;rsquo;t until the very end of privesc to root that we find anything Linux-specific. &lt;em>Lantern&lt;/em> is about a generic IT services company running a landing page and an admin panel. What made this one a little special is its extensive use of &lt;em>Blazor&lt;/em>.&lt;/p></description></item><item><title>Codify</title><link>https://4wayhandshake.github.io/walkthrough/codify/</link><pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate><guid>https://4wayhandshake.github.io/walkthrough/codify/</guid><description>&lt;h2 id="introduction">INTRODUCTION&lt;/h2>
&lt;p>&lt;em>Codify&lt;/em> is an easy-rated Linux box that demonstrates just how badly things can go when producing small / indie web apps in the NodeJS environment. In the modern context of tech leaning heavily on open-source projects, Codify highlights an increasingly relevant issue: &lt;em>how do we deal with open-source dependencies when those packages go stale, unmaintained, or otherwise EOL?&lt;/em> While this box was especially easy, it was an absolute delight to solve.&lt;/p></description></item></channel></rss>